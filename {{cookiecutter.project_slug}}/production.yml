version: '2'

volumes:
  postgres_data: {}
  postgres_backup: {}

services:
  django:{% if cookiecutter.use_celery == 'y' %} &django{% endif %}
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    depends_on:
      - postgres
      - redis
    env_file: .env
    environment:
      - ENABLE_ACME=true
    command: /gunicorn.sh
    expose:
      - "5000"

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backups
    env_file: .env

  nginx-proxy:
    image: neilpang/nginx-proxy
    depends_on:
      - django
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./proxy/certs:/etc/nginx/certs
      - ./proxy/acme:/acmecerts
      - ./proxy/conf.d:/etc/nginx/conf.d
    network_mode: "host"

  redis:
    image: redis:3.0
{% if cookiecutter.use_celery == 'y' %}
  celeryworker:
    <<: *django
    depends_on:
     - postgres
     - redis
    command: /start-celeryworker.sh

  celerybeat:
    <<: *django
    depends_on:
      - postgres
      - redis
    command: /start-celerybeat.sh
{% endif %}
