---
log:
  level: INFO

entryPoints:
  web:
    # http
    address: ":8080"
    http:
      # https://docs.traefik.io/routing/entrypoints/#entrypoint
      redirections:
        entryPoint:
          to: web-secure

  web-secure:
    # https
    address: ":8443"
  {%- if cookiecutter.use_celery == 'y' %}

  flower:
    address: ":5555"
  {%- endif %}

certificatesResolvers:
  letsencrypt:
    # https://docs.traefik.io/master/https/acme/#lets-encrypt
    acme:
      email: "{{ cookiecutter.email }}"
      storage: /etc/traefik/acme/acme.json
      # https://docs.traefik.io/master/https/acme/#httpchallenge
      httpChallenge:
        entryPoint: web

tls:
  # https://docs.traefik.io/https/tls/#tls-options
  options:
    default:
      # see https://caniuse.com/tls1-2 for browsers that support TLS 1.2
      minVersion: VersionTLS12
      # see https://caniuse.com/sni for browsers that support SNI
      sniStrict: true
      # https://wiki.mozilla.org/Security/Server_Side_TLS
      cipherSuites: # use only elliptic curve (the strongest) ciphers
        - TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256

http:
  routers:
    web-secure-router:
      {%- if cookiecutter.domain_name.count('.') == 1 %}
      rule: "Host(`{{ cookiecutter.domain_name }}`) || Host(`www.{{ cookiecutter.domain_name }}`)"
      {% else %}
      rule: "Host(`{{ cookiecutter.domain_name }}`)"
      {%- endif %}
      entryPoints:
        - web-secure
      middlewares:
        - csrf
        - security-headers
      service: django
      tls:
        # https://docs.traefik.io/master/routing/routers/#certresolver
        certResolver: letsencrypt
    {%- if cookiecutter.use_celery == 'y' %}

    flower-secure-router:
      rule: "Host(`{{ cookiecutter.domain_name }}`)"
      entryPoints:
        - flower
      middlewares:
        - security-headers
      service: flower
      tls:
        # https://docs.traefik.io/master/routing/routers/#certresolver
        certResolver: letsencrypt
    {%- endif %}

  middlewares:
    csrf:
      # https://docs.traefik.io/master/middlewares/headers/#hostsproxyheaders
      # https://docs.djangoproject.com/en/dev/ref/csrf/#ajax
      headers:
        hostsProxyHeaders: ["X-CSRFToken"]
    security-headers:
      # https://docs.traefik.io/middlewares/headers/#general
      headers:
        # TODO increase stsSeconds to *at least* 31536000 (1 year) once HTTPS works
        stsSeconds: 60
        stsIncludeSubdomains: true
        stsPreload: true
        frameDeny: true
        contentTypeNosniff: true
        browserXssFilter: true
        customResponseHeaders:
          # https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server
          server: {{ random_ascii_string(10) }} # hide server version

  services:
    django:
      loadBalancer:
        servers:
          - url: http://django:5000
    {%- if cookiecutter.use_celery == 'y' %}

    flower:
      loadBalancer:
        servers:
          - url: http://flower:5555
    {%- endif %}

providers:
  # https://docs.traefik.io/master/providers/file/
  file:
    filename: /etc/traefik/traefik.yml
    watch: true
